<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd" default-autowire="byName">
	
	<!-- 防止spring声明式事务失效
		springmvc在扫描的时候不扫描带有@Service注解的类
		放在spring-ds.xml里面扫描所有类
	 -->
	<context:component-scan base-package="com.bpm,com.grx">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
	</context:component-scan>
	
	<!-- 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 -->
	<mvc:interceptors>
		<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
	</mvc:interceptors>
	<!-- 基于Session国际化 -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
	<!-- 基于Cookie国际化 
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />-->
	
	<!--SpringMvc启用注解映射的支持 -->
	<context:annotation-config />
	
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
		    	<constructor-arg value="UTF-8" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
			<bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                  <list>
                    <value>text/json;charset=UTF-8</value>
                    <value>application/json;charset=UTF-8</value>
                  </list>
            </property>
            </bean>			
  		</mvc:message-converters>
	</mvc:annotation-driven>
	
	  <!--页面视图层信息 -->
	  <bean id="viewResolver"
	    class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <property name="viewClass"
	      value="org.springframework.web.servlet.view.JstlView"></property>
	    <property name="prefix" value="/"></property> <!--页面的前辍名 -->
	    <property name="suffix" value=".jsp"></property> <!--页面的后辍名 -->
	  </bean>
    
    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" />
	
	<!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL-->
	<mvc:default-servlet-handler/>
	
	<!--开启AOP自动代理-->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true" /> -->
	
	<!-- 开启文件上传  -->
<!-- 	<bean id="multipartResolver"
   		 class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <property name="maxUploadSize" value="100000"/>
	    <property name="maxInMemorySize" value="10240" />
	</bean> -->
	
	<import resource="classpath*:spring-hessian-*.xml"/>
</beans>